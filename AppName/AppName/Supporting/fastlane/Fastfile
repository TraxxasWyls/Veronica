default_platform(:ios)

before_all do
    setup_semaphore
    cocoapods
end

platform :ios do

    lane :staging do
        match(
          type: "adhoc", 
          app_identifier: "com.incetro.the-run.staging"
        )
        gym(
          scheme: "AppName",
          configuration: "Staging",
          xcconfig: "./AppName/Application/ApplicationLayer/Common/Environment/Staging.xcconfig"
        )
        appcenter_upload(
            app_name: 'AppName',
            ipa: 'build/AppName.ipa',
            notify_testers: true
        )
    end

    lane :release do
      increment_build_number(build_number: get_max_build_number + 1)
      match(
        type: "appstore", 
        app_identifier: "com.incetro.the-run.prod"
      )
      gym(
        xcconfig: "./AppName/Application/ApplicationLayer/Common/Environment/Production.xcconfig"
      )
      pilot(
        ipa: "build/AppName.ipa",
        skip_waiting_for_build_processing: true
      )
    end

  desc "Update local build number to TestFlight build number if it is greater"
  lane :upbuild do
    ensure_git_status_clean
    remote = get_max_remote_build
    local = get_build_number
    if local.to_i < remote
      increment_build_number(build_number: remote)
      commit_version_bump
      push_to_git_remote
    else
      puts 'Your build number is up to date'
    end
  end

  def get_max_remote_build
    appcenter_info = appcenter_fetch_version_number(
      api_token: ENV["VS_API_TOKEN"],
      owner_name: "appnameapp",
      app_name: "AppName"
    )
    appcenter = appcenter_info["build_number"]
    fastlane = latest_testflight_build_number(
        app_identifier: 'com.incetro.the-run.prod'
    )
    build = [
      fastlane, 
      appcenter.to_i
    ].max
    return build
  end

  def get_max_build_number
    local = get_build_number
    remote = get_max_remote_build
    build = [
      remote,
      local.to_i
    ].max
    return build
  end

end
